diff --git a/QC_Process/QC_Backend.sh b/QC_Process/QC_Backend.sh
index 8060299..a47ffff 100644
--- a/QC_Process/QC_Backend.sh
+++ b/QC_Process/QC_Backend.sh
@@ -58,16 +58,27 @@ Housekeeping() {
     [[ -z $Found_hostname ]] && Found_hostname='fullyBogusName'
     # *--* For Master Box, update the Hostname to 
     #       'FritaAA-MMMdd', where AA is 32 or 64.
-    if [ $Master_test == 'M' ]
-    then
-	echo $0':Running Master QC Mode' >&2
-	echo 'Frita'${CPU_ADDRESS}-$(date +'%b%d') |sudo tee /etc/hostname
+    case $Master_test in
+    'M')
+        echo $0':Running Master QC Mode' >&2
+        echo 'Frita'${CPU_ADDRESS}-$(date +'%b%d') |sudo tee /etc/hostname
+        Alter_HOSTNAME
+        ;;
+    'm')
+	echo 'Not changing hostname '$Found_hostname' on master this run...'
 	sleep 3
-    else
+        ;;
+    *)
 	# *--* For Cloning Client, update the Hostname to 
 	#   'Frita64-date_in_seconds_since_1970 (or Frita32...)'
 	echo 'Frita'${CPU_ADDRESS}-$(date +'%s') |sudo tee /etc/hostname
-    fi
+	Alter_HOSTNAME
+        ;;
+    esac
+}
+
+Alter_HOSTNAME() {
+
     New_hostname=$(cat /etc/hostname)
     [[ -z $New_hostname ]] && New_hostname='AnotherFullyBogusName'
     sudo sed -i "s/$Found_hostname/$New_hostname/" /etc/hosts
@@ -78,6 +89,7 @@ Housekeeping() {
 	echo '   and from /etc/hosts: '$(grep '^127\.' /etc/hosts |grep -v 'localhost')
 	read -p'<OK?>'
     fi
+
 }
 
 Integrity_tests() {
@@ -536,23 +548,32 @@ read Xu
 }
 
 Test_ff_flash() {
+
     path2firefox=$(which firefox 2>/dev/null)
-    if [ -n "$path2firefox" ]
+    sample_video='https://www.youtube.com/watch?v=syHv0kuQCus'
+	    #http://www.youtube.com/watch?v=mwbgwZxodKE
+
+    if [ -z "$path2firefox" ]
     then
-        dialog --keep-tite --clear --colors --title "\Z7\ZrFree IT Athens Quality Control Test"\
-            --yesno "Test \Z4\ZrShockwave Flash\ZR \Z0in $path2firefox ?" 9 60
-        d_RC=$?
-        if [ $d_RC -eq 0 ]
-        then
-            $path2firefox -no-remote http://www.youtube.com/watch?v=mwbgwZxodKE 2>>$ERRFILE &
-            ice_PID=$!
-            echo $ice_PID 'process # for ff' >>$ERRFILE
-            Window_killa $ice_PID 40
-            Append_to_log 'INFO' 'Flash plugin test' 'Test was run'
-        fi
-    else
         Append_to_log 'PROB' 'Flash plugin test' 'This test is NOT possible'
+	return 1
     fi
+
+    dialog --keep-tite --clear --colors --title "\Z7\ZrFree IT Athens Quality Control Test"\
+	--yesno "Test \Z4\ZrShockwave Flash\ZR \Z0in $path2firefox ?" 9 60
+    d_RC=$?
+    if [ $d_RC -eq 0 ]
+    then
+	$path2firefox -no-remote\
+	    $sample_video\
+	    2>>$ERRFILE &
+	ice_PID=$!
+	echo $ice_PID 'process # for ff' >>$ERRFILE
+	Window_killa $ice_PID 40
+	Append_to_log 'INFO' 'Flash plugin test' 'Test was run'
+    fi
+
+    return 0
 }
 
 Window_killa() {
diff --git a/image_scripts/BPR_custom_prep.sh b/image_scripts/BPR_custom_prep.sh
index 1ef69b2..81586c6 100755
--- a/image_scripts/BPR_custom_prep.sh
+++ b/image_scripts/BPR_custom_prep.sh
@@ -1,41 +1,57 @@
 #!/bin/bash
 set -u
-Git_name=FRITAdot
+custom_dotfiles_id='FRITAdot'
 declare -r uri_desktop_files=\
-'https://github.com/bpr97050/'${Git_name}'.git'
-declare -r uri_chromium_prefs=\
+'https://github.com/bpr97050/'${custom_dotfiles_id}'.git'
+
+sys_dir_chromium='/etc/chromium-browser'
+declare -r uri_chromium_mastprefs=\
 'https://gist.githubusercontent.com/bpr97050/a714210a8759b7ccc89c/raw/'
+
+file_chromium_bookmarks='default_bookmarks.html'
+sys_path_chromium_bookmarks="${sys_dir_chromium}/$file_chromium_bookmarks"
 declare -r uri_chromium_bookmarks=\
 'https://gist.github.com/bpr97050/b6b5679f94d344879328/raw'
+
+file_chromium_defaults='default'
+declare -r sys_path_chromium_defaults=\
+"${sys_dir_chromium}/$file_chromium_defaults"
+
 declare -r uri_pepperflash_codex_installer=\
 'https://gist.githubusercontent.com/bpr97050/9899740/raw'
+
 declare -r uri_firefox_prefs=\
 'https://gist.github.com/bpr97050/eb37e9850e2d951bc676/raw'
+file_firefox_prefs='syspref.js'
+sys_dir_firefox='/etc/firefox'
+sys_path_firefox_prefs="${sys_dir_firefox}/$file_firefox_prefs"
+
+#TODO: Following link is broken (HTTP 404)
 declare -r uri_firefox_bookmarks='http://a.pomf.se/kyiput.sqlite'
 
-active_live_run=${live_run:-'N'}
+[[ -z $live_run ]] && live_run='N'
+[[ -z $refresh_git ]] && refresh_git='N'
+[[ -z $codebase ]] && codebase="${HOME}/freeitathenscode/image_scripts"
 
 Mainline() {
 
     Run_apt_update || return $?
 
-    if [ $refresh_git == 'Y' ]
-    then
-        Download_custom_desktop_files\
-            || echo 'Download_custom_desktop_files: Problem?'
-    else
-        Pauze 'Refresh from github not in the cards this run...'
-    fi
+    cd $DOWNLOADS
+    Download_custom_desktop_files\
+        || echo 'Download_custom_desktop_files: Problem?'
+    cd -
 
     Firefox_stuff || echo 'Firefox Config: Problem?'
     Chromium_stuff || echo 'Chromium Config: Problem?'
 
     Set_backgrounds
 
-    #Auto security upgrades
-    [[ $active_live_run == 'Y' ]] &&\
-	sudo dpkg-reconfigure -plow unattended-upgrades
+    # -*- Auto security upgrades -*-
+    [[ $live_run == 'Y' ]] &&\
+        sudo dpkg-reconfigure -plow unattended-upgrades
 
+    # -*- Install / update patches now -*-
     Pauze 'apt-get dist-upgrade'
     sudo apt-get dist-upgrade
     Pauze 'apt-get purge autoremove and autoclean'
@@ -43,139 +59,175 @@ Mainline() {
     sudo apt-get autoclean
 
     Pauze "INFO,Finished with BPR custom code. last RC: $?"
-
     return 0
 }
 
 Download_custom_desktop_files() {
+
     local RC=0
-    Pauze 'BPR Download_custom_desktop_files'
-    cd $DOWNLOADS
 
     Activate_shopts
-    [[ -n $Git_name ]] && [[ -d $Git_name ]] && sudo rm -rf ${Git_name}
+    if [[ -d $custom_dotfiles_id ]]
+    then
+        rm -rf ${custom_dotfiles_id}/*
+    else
+        mkdir $custom_dotfiles_id
+    fi
+
+    [[ $refresh_git == 'Y' ]] || return 0
+
+    cd $custom_dotfiles_id || return 12
     git clone $uri_desktop_files || return $?
-    cd -
+    find . -type f -exec head -n4 {} \;
 
-    Pauze 'Preparing for Manual Moves from '${PWD}/${Git_name}' to /etc/skel/'
-    bash
-    #sudo rsync -aRv --exclude '.git' --delete-excluded ${Git_name}/ /etc/skel/
+    Pauze 'Now do Manual Moves (where appropriate) to /etc/skel/'
+    #bash ||RC=$?
     Reset_shopts
 
     return $RC
 }
 
 Activate_shopts() {
+
+    shopt -o >&2
     orig_shopt_nullglob=$(shopt -p nullglob)
     orig_shopt_dotglob=$(shopt -p dotglob)
     shopt -s nullglob
     shopt -s dotglob
+
+    return $?
 }
 
 Reset_shopts() {
+
     [[ $orig_shopt_nullglob =~ ' -u ' ]] && shopt -u nullglob
     [[ $orig_shopt_dotglob =~ ' -u ' ]] && shopt -u dotglob
+    shopt -o >&2
+
+    return $?
 }
 
 Firefox_stuff() {
 
     local RC=0
 
-    sudo apt-get install firefox || return 16
+    #sudo apt-get install firefox || return 16
+    which firefox || return 16
 
-    # *--* Poodle et.al.,
-    #   cf.https://addons.mozilla.org/en-US/firefox/addon/ssl-version-control/
+    src_path_firefox_prefs="${DOWNLOADS}/$file_firefox_prefs"
     # Options for Firefox bookmarks and settings
-    wget -O ${DOWNLOADS}/syspref.js $uri_firefox_prefs
-    wget -O ${DOWNLOADS}/places.sqlite $uri_firefox_bookmarks
+    wget -O $src_path_firefox_prefs $uri_firefox_prefs
+    #wget -O ${DOWNLOADS}/places.sqlite $uri_firefox_bookmarks
 
-    Answer='N'
-    [[ $active_live_run == 'Y' ]] &&\
-        Pause_n_Answer 'Y|N' 'INFO,Customize Default Settings for Firefox?'
-    if [ "${Answer}." == 'Y.' ]
+    if [[ $live_run != 'Y' ]]
     then
-        sudo cp -iv ${DOWNLOADS}/syspref.js /etc/firefox/syspref.js ||RC=$?
-        #rm -iv ${HOME}/.mozilla/firefox/*.default/places.sqlite{,-*} 
-        #cp -iv ${DOWNLOADS}/places.sqlite ${HOME}/.mozilla/firefox/*.default/places.sqlite
-        timeout -k 1m 5s firefox
-    else
-        Pauze 'DRY RUN?: action is cp -iv '${DOWNLOADS}'/syspref.js /etc/firefox/syspref.js'
+        Pauze 'DRY RUN: action would be "cp -iv ' ${src_path_firefox_prefs}' '$sys_path_firefox_prefs'"'
+        return 0
     fi
 
+    cp -iv --backup=t $sys_path_firefox_prefs /tmp
+    Answer='N'
+    Pause_n_Answer 'Y|N' 'WARN,Customize Default Settings for Firefox?'
+    [[ "${Answer}." == 'Y.' ]] &&\
+        sudo cp -iv ${src_path_firefox_prefs} $sys_path_firefox_prefs
+    RC=$?
+    [[ $RC -eq 0 ]] && timeout -k 1m 5s firefox
+
     return $RC
 }
+# *--* Poodle fixes, et.al.:
+# cf. https://addons.mozilla.org/en-US/firefox/addon/ssl-version-control/
+# cf. https://disablessl3.com/ *--*
+
+#TODO sql code to merge sqlite bookmarks (places)
+#rm -iv ${HOME}/.mozilla/firefox/*.default/places.sqlite{,-*} 
+#cp -iv ${DOWNLOADS}/places.sqlite
+#    ${HOME}/.mozilla/firefox/*.default/places.sqlite
 
 Chromium_stuff() {
 
     local RC=0
 
+    Pauze 'Ensure latest chromium-browser is installed'
     sudo apt-get install chromium-browser
 
-    # Ensure "/etc/chromium-browser" is a directory (not a file)
-    [[ -e /etc/chromium-browser ]]\
-        && ( [[ -d /etc/chromium-browser ]]\
-        || sudo mv -iv /etc/chromium-browser /tmp/ )
-    [[ -d /etc/chromium-browser ]] || sudo mkdir /etc/chromium-browser
-
     Chromium_master_pref
     Chromium_defaults
     Chromium_bookmarks
-    Chromium_nonfree_codex_prep
-
-    #sudo add-apt-repository ppa:skunk/pepper-flash
-    #sudo apt-get install pepflashplugin-installer\
-    #   && echo '. /usr/lib/pepflashplugin-installer/pepflashplayer.sh'\
-    #   |sudo tee -a /etc/chromium-browser/default
+    Chromium_nonfree_codex_prep || echo 'Problem with nonfree codex installer?'
 
     return $RC
 }
 
 Chromium_master_pref() {
 
-    # Download master_preferences config file for chromium
-    wget -O ${DOWNLOADS}/master_preferences $uri_chromium_prefs
+    local RC=0
 
-    if [[ $active_live_run == 'Y' ]]
+    file_mastprefs='master_preferences'
+    src_path_mastprefs="${DOWNLOADS}/${file_mastprefs}"
+    Pauze 'Install chromium master prefs. $live_run='$live_run', $refresh_git='$refresh_git
+    if [[ $refresh_git == 'Y' ]]
     then
-        sudo cp -iv ${DOWNLOADS}/master_preferences /etc/chromium-browser/
-    else
-        Pauze 'DRY RUN: cp -iv '${DOWNLOADS}'/master_preferences /etc/chromium-browser/'
+        wget -O ${src_path_mastprefs} $uri_chromium_mastprefs
+	RC=$?
     fi
 
-    return $?
+    if [[ $live_run != 'Y' ]]
+    then
+        Pauze 'DRY RUN: would normally exec: cp -iv ' $src_path_mastprefs' '$sys_dir_chromium'/'
+        return 0
+    fi
+
+    sys_path_mastprefs=${sys_dir_chromium}/${file_mastprefs}
+    cp -iv --backup=t $sys_path_mastprefs /tmp
+    Answer='N'
+    Pause_n_Answer 'Y|N' 'Install Custom Chromium Master Preferences?'
+    if [[ "${Answer}." == 'Y.' ]]
+    then
+        sudo cp -iv ${src_path_mastprefs} ${sys_dir_chromium}/ ||RC=$?
+    fi
+
+    return $RC
 }
-#Answer='N'
-#Pause_n_Answer 'Y|N' 'Git-Load Chromium Master Preferences?'
 
 Chromium_defaults() {
 
-    # Ensure certain Chromium Flags settings are in place.
-    if [[ $active_live_run == 'Y' ]]
+    if [[ $live_run != 'Y' ]]
     then
-        sudo sed -i 's/CHROMIUM_FLAGS=""/CHROMIUM_FLAGS="--start-maximized\
-        --disable-new-tab-first-run --no-first-run --ssl-version-min=tls1\
-        --disable-google-now-integration"/g' /etc/chromium-browser/default
-    else
-        Pauze 'DRY RUN: '
+        grep 'CHROMIUM_FLAGS' $sys_path_chromium_defaults
+        Pauze 'DRY RUN: Chromium default file for run flags ... '
+	return 0
     fi
-    grep 'CHROMIUM_FLAGS' /etc/chromium-browser/default
-    read -p'Chromium Flags Listed' -t20
+
+Workfile=$(mktemp -t "chromiumflags.XXX") || return 12
+touch $Workfile || return 13
+
+grep 'CHROMIUM_FLAGS' $sys_path_chromium_defaults |grep -v '\$CHROMIUM_FLAGS' |perl -ne 'chomp;$cfl=$_;$cfl =~ s/^\s+//;print $cfl."\n";' |tee $Workfile
+source $Workfile
+echo $CHROMIUM_FLAGS 
+Pauze 'Setup Chromium Flags (Append to above)'
+
+CHROMIUM_FLAGS=${CHROMIUM_FLAGS}' --start-maximized --disable-new-tab-first-run --no-first-run --ssl-version-min=tls1 --disable-google-now-integration'
+    echo 'CHROMIUM_FLAGS='$CHROMIUM_FLAGS |sudo tee -a $sys_path_chromium_defaults
+    Pauze 'Written to '$sys_path_chromium_defaults'. Now going into edit...'
+    sudo vim $sys_path_chromium_defaults
 
     return $?
-    # *--* Poodle fix et.al. cf. https://disablessl3.com/ *--*
 }
 
 Chromium_bookmarks() {
 
-    wget -O ${DOWNLOADS}/default_bookmarks.html $uri_chromium_bookmarks
-    if [[ $active_live_run == 'Y' ]]
+    src_path_chromium_bookmarks="${DOWNLOADS}/file_chromium_bookmarks"
+    if [[ $live_run != 'Y' ]]
     then
-        sudo cp -iv\
-            ${DOWNLOADS}/default_bookmarks.html /etc/chromium-browser/
-    else
-        Pauze 'DRY RUN: copy '${DOWNLOADS}'/default_bookmarks.html /etc/chromium-browser/'
+        Pauze "DRY RUN: cp -iv $src_path_chromium_bookmarks ${sys_dir_chromium}/"
+	return 0
     fi
 
+    wget -O $src_path_chromium_bookmarks $uri_chromium_bookmarks
+    cp -iv --backup=t $sys_path_chromium_bookmarks /tmp
+    sudo cp -iv $src_path_chromium_bookmarks ${sys_dir_chromium}/
+
     return $?
 }
 
@@ -188,7 +240,8 @@ Chromium_nonfree_codex_prep() {
         && sudo chmod +x /usr/local/bin/install_nonfree_codex\
         && RCxPSS=0
 
-    Pauze 'Make icon on desktop that runs /usr/local/bin/install_nonfree_codex'
+    [[ $RCxPSS -eq 0 ]] &&\
+        Pauze 'Make icon on desktop that runs /usr/local/bin/install_nonfree_codex'
 
     return $RCxPSS
 }
@@ -201,7 +254,7 @@ Set_backgrounds() {
             Answer='N'
             Pause_n_Answer 'Y|N' 'INFO,reset background in '$greetings'?'
             if [ "${Answer}." == 'Y.' ]
-            then 
+            then
                 sudo sed -i 's/^background=/#background=/g' $greetings
                 echo "background=#88ff00" | sudo tee -a $greetings
             fi
@@ -213,23 +266,34 @@ Set_backgrounds() {
     #sudo sed -i 's/^background=/#background=/g' /etc/lightdm/lightdm-gtk-greeter.conf
 }
 
-declare -r HOLDIFS=$IFS 2>/dev/null
-[[ -z $codebase ]] && codebase="${HOME}/freeitathenscode/image_scripts"
-source ${codebase}/Common_functions || exit 12
-source ${codebase}/Prepare_functions || exit 13
+source /home/oem/freeitathenscode/image_scripts/Prepare_functions || exit 99
 
-DOWNLOADS=${HOME}'/Downloads'
-[[ -d ${DOWNLOADS} ]] || mkdir ${HOME}/Downloads
+DOWNLOADS="/home/$(id -n -u)/Downloads"
+[[ -d ${DOWNLOADS} ]] || mkdir $DOWNLOADS
 [[ -d ${DOWNLOADS} ]] || exit 13
 
+cd $DOWNLOADS
+pwd
 find $DOWNLOADS -not -uid $UID -exec sudo chown -c $UID {} \;
+Pauze 'Confirm (above) is Downloads Directory and contents'
+cd -
+
 Mainline
 
 find $DOWNLOADS -not -uid $UID -exec sudo chown -c $UID {} \;
-find ${DOWNLOADS} -cmin -10 -ls
+find ${DOWNLOADS} -cmin -12
+Pauze 'Downloaded files this run (above).'
 
 #Wine stuff in case the user needs to run a Windows executable
 #sudo apt-get install wine winetricks
 #sudo do-release-upgrade
 #sudo apt-get install ibus
+   #     sudo sed -i 's/CHROMIUM_FLAGS=""/CHROMIUM_FLAGS="--start-maximized
+   #     --disable-new-tab-first-run --no-first-run --ssl-version-min=tls1
+   #     --disable-google-now-integration"/g' /etc/chromium-browser/default
+
+    #sudo add-apt-repository ppa:skunk/pepper-flash
+    #sudo apt-get install pepflashplugin-installer
+    #   && echo '. /usr/lib/pepflashplugin-installer/pepflashplayer.sh'
+#https://github.com/freeITathens/freeitathenscode/blob/master/image_scripts/BPR_xt_lubuntu_32bit.sh
 
diff --git a/image_scripts/Common_functions b/image_scripts/Common_functions
index 80683c7..3a6890e 100644
--- a/image_scripts/Common_functions
+++ b/image_scripts/Common_functions
@@ -1,4 +1,6 @@
 # *Common_functions: to be sourced
+declare -r HOLDIFS=$IFS
+
 # *--* Identify box as 32 or 64 bit capable. *--*
 Get_Address_Len() {
     use_strict=${1:-'n'}
@@ -19,7 +21,8 @@ Get_Address_Len() {
             && alt_address_len=64
         if [ $address_len -ne $alt_address_len ]
         then
-            echo 'Discrepancy in finding cpu address size '$address_len' '$alt_address_len
+            echo 'Discrepancy in finding cpu address size '\
+                $address_len' VS. '$alt_address_len
         fi
     fi
     export address_len
@@ -105,7 +108,7 @@ Ramp_up() {
         t)
             echo -ne "\t"
             ;;
-        M) 
+        M)
             echo -ne ${colorattr_pre}${COLORATTR}'m'$Message
             COLORATTR=''
             ;;
@@ -128,14 +131,14 @@ Ramp_up() {
                 "${colorattr_pre}${COLORATTR}${colorattr_post}"${mess_parts_a[$mess_ix]} &&\
                 COLORATTR=''
             ;;
-        B) 
+        B)
             echo -ne "${colorattr_pre}${COLORATTR}${colorattr_post} "
             ;;
         *)
             Is_numeric_tr $token && Is_numeric_re $token && Yes_its_numeric $token
             ;;
     esac
- 
+
     last_token=$token
     return $RC
 }
@@ -227,8 +230,6 @@ Yes_its_numeric() {
 Pauze() {
 
     Log_mess $@
-    # !Print to terminal only if this session is interactive.
-    [[ "${Not_Batch_Run}." == 'N.' ]] && return 0
 
     set +u
     IFS=$' \t\n'
@@ -240,6 +241,9 @@ Pauze() {
         Zanned_response $1 || ((RC+=$?))
         shift 1
     done
+    IFS=$HOLDIFS
+
+    [[ "${batch_run}." == 'Y.' ]] && return 0
 
     read -p '<ENTER; timeout in 10 secs...>' -t10
 
@@ -247,11 +251,12 @@ Pauze() {
 }
 
 Pause_n_Answer() {
+
+    [[ "${batch_run}." == 'Y.' ]] && return 0
+
     set +u
     IFS=$' \t\n'
-    Prompt2U=$1
-    shift
-    Answer=''
+    question_to_user=$1;shift
     local RC=0
 
     while [ -n "$1" ]
@@ -259,15 +264,21 @@ Pause_n_Answer() {
         Zanned_response $1 || ((RC+=$?))
         shift 1
     done
+    IFS=$HOLDIFS
 
-    #[[ $Prompt2U =~ [Y|y|N|n] ]] Prompt2U='Y|N' RC=1
     set +u
-    Prompt2U='====> Your response {'${Prompt2U}'}? '
     echo ''
-    declare -a User_resp
-    read -p "$Prompt2U" -a User_resp
-    Answer=${User_resp[0]}
+    [[ -z $Answer ]] && Answer='N'
+    declare -a user_resp_arr
+    prompt_to_user=' ----> Your response {'${question_to_user}'}? '
+
+    read -p"$prompt_to_user" -a user_resp_arr -t100
+    RC=$?
+    echo ''
+    [[ $RC -gt 0 ]] && return $RC
+    [[ ${#user_resp_arr[@]} -eq 0 ]] && return 0
 
+    Answer=${user_resp_arr[0]}
     return $RC
 }
 
@@ -299,7 +310,7 @@ Zanned_response() {
     fi
 
     [[ -z "$mess" ]] && mess='Unknown Message..????'
-    #rettyprint "n,1,${basic_emph},47,M,0,n" $mess || RC=$?
+
     prettyprint "n,1,${basic_emph},40,M,0,n" $mess || RC=$?
 
     return $RC
@@ -311,8 +322,8 @@ Run_Cap_Out() {
     if [ $cmd = 'sudo' ]
     then
         dosu='sudo'
-	cmd=$1
-	shift
+        cmd=$1
+        shift
     fi
     stuff=$@
 
@@ -368,7 +379,7 @@ Time_to_kill() {
 
     return $RC
 }
- 
+
 #/usr/share/lubuntu/wallpapers/: directory
 #udevadm info --query=env --name=/dev/sda1 |grep UUID
 
diff --git a/image_scripts/Packages b/image_scripts/Packages
index cf512ff..1d93b8b 100644
--- a/image_scripts/Packages
+++ b/image_scripts/Packages
@@ -1,4 +1,11 @@
-#Temp
+# -*- [repo source]/image_scripts/Packages.csv : comma separated -*-
+# -*- Free I.T. Athens Custom Package Install/Remove Settings    -*-
+# -*- Comment lines (line this one) are ignored by the script    -*-
+# COLUMN 1 = PACKAGE_NAME
+#    COLUMN 2 = ARCHITECTURE (32, 64, 0=any)
+#       COLUMN 3 = TARGET ({ALL|Distro Family Name}=install; NONE=purge)
+#          COLUMN 4 = EXTRA (ppa repo add; otherwise cross-package ins/purg info)
+firmware-b43-installer,32,mint,why=make_avail_for_laptops
 chromium-browser,0,ALL
 pepperflashplugin-nonfree,0,ALL
 aptitude,0,ALL,
diff --git a/image_scripts/Prepare_for_clonze.sh b/image_scripts/Prepare_for_clonze.sh
old mode 100644
new mode 100755
diff --git a/image_scripts/Prepare_for_imaging.sh b/image_scripts/Prepare_for_imaging.sh
old mode 100644
new mode 100755
index cb26e93..8dc9495
--- a/image_scripts/Prepare_for_imaging.sh
+++ b/image_scripts/Prepare_for_imaging.sh
@@ -1,6 +1,7 @@
 #!/bin/bash +x
-[[ 0 -ne $(id |grep -o -P '^uid=\d+' |cut -f2 -d=) ]] &&\
-    read -p'NOTE: Permission Problems? Rerun with sudo (i.e., as root).<ENTER>' -t5
+[[ 0 -eq $(id |grep -o -P '^uid=\d+' |cut -f2 -d=) ]] &&\
+    read -p'NOTE: Please run as normal user with sudo privledges.<CONTROL-C>'
+# read -p'NOTE: Permission Problems Rerun with sudo (i.e., as root).<ENTER>' -t5
 
 # Establish base of version-controlled code tree.
 [[ -z $SOURCEBASE ]] && declare -x SOURCEBASE='/home/oem/freeitathenscode'
@@ -8,14 +9,13 @@
 # Establish location of these scripts within SOURCEBASE
 codebase=${SOURCEBASE}'/image_scripts'
 [[ -d $codebase ]] || exit 14
-
 declare -x codebase
 source ${codebase}/Prepare_functions || exit 136
 
-package_list_path_I=${codebase}'/Packages'
-wallpaper_filename='FreeIT.png'
-wallpaper_source_pathname=${codebase}/$wallpaper_filename
-wallpaper_system_dirname='/usr/share/backgrounds'
+pathname_packages_list=${codebase}'/Packages'
+filename_wallpaper='FreeIT.png'
+src_path_wallpaper=${codebase}/$filename_wallpaper
+sys_dir_wallpaper='/usr/share/backgrounds'
 wallpaper_was_setup='N'
 
 aptcache_needs_update='Y'
@@ -25,12 +25,7 @@ refresh_git='Y'
 ADD_ALL='Y'
 PUR_ALL='Y'
 live_run='N'
-Not_Batch_Run='N'
-
-This_script=$(basename $0)
-declare -rx Messages_O=$(mktemp -t "${This_script}_log.XXXXX")
-declare -rx Errors_O=$(mktemp -t "${This_script}_err.XXXXX")
-Optvalid='APBDn:RuVGh'
+batch_run='N'
 
 Mainline() {
 
@@ -38,16 +33,20 @@ Mainline() {
     Integrity_check
     Install_Remove_requested_packages
 
-    if [ $address_len -eq 64 ]
-    then
-        grep -o -P '^OnlyShowIn=.*MATE' /usr/share/applications/screensavers/*.desktop 
-        Pauze 'Mate Desktop able to access xscreensavers for ant spotlight?'
-    fi
+    case $distro_generia in
+        ubuntu|mint)
+            echo 'Run BPR Code'
+            [[ -f ${codebase}/BPR_custom_prep.sh ]] &&\
+                ${codebase}/BPR_custom_prep.sh
+            Pauze "Run BPR: Last return code: $?"
+            ;;
+        *)
+            Pauze "Don't need to run BPR additions for "$distro_generia' ('$DISTRO_NAME')'
+            ;;
+    esac
 
-    set -u
     Check_Setup_wallpaper;RCxW=$?
     Report_Check_Setup_wallpaper $RCxW
-    set +u
 
     Pauze 'Lauching Virtual Greybeard'
     clear
@@ -63,7 +62,7 @@ Mainline() {
 Housekeeping() {
 
     sys_rpts_distro_name=''
-    if [ -z $DISTRO_NAME ] 
+    if [ -z $DISTRO_NAME ]
     then
         Distro_name_Set;RCxDnS=$?
         if [ $RCxDnS -gt 0 ]
@@ -83,7 +82,6 @@ Housekeeping() {
     [[ "${refresh_updatedb}." == 'Y.' ]] && updatedb &
     [[ "${refresh_svn}." == 'Y.' ]] && Contact_server
 
-    Pauze 'Will update apt-metadata if requested (COND:'$aptcache_needs_update')'
     [[ $aptcache_needs_update == 'Y' ]] && Run_apt_update
 
     #Pauze 'Confirm no medibuntu in apt sources'
@@ -99,7 +97,7 @@ Distro_name_Set() {
     [[ $RCxS -eq 0 ]] || return 30
 
     DISTRO_NAME=$sys_rpts_distro_name
-    echo 'set' \$DISTRO_NAME '= '$DISTRO_NAME
+    #echo 'set' \$DISTRO_NAME '= '$DISTRO_NAME
     Answer='N'
     Pause_n_Answer 'Y|N' '...system value '${DISTRO_NAME}' is used, OK? '
     [[ "${Answer}." == 'Y.' ]] || return 12
@@ -133,10 +131,14 @@ Set_Confirm_distro_name() {
 
     echo 'System distro value ('\
         ${sys_rpts_distro_name}\
-          '): mismatch (however slight) with input: ('\
+          '): mismatch (however slight) with your supplied name: ('\
         ${DISTRO_NAME}').'
-    read -p'<ACCEPT(=Y)?>' -a ANS_ARR
-    [[ ${#ANS_ARR[*]} -gt 0 ]] && [[ ${ANS_ARR[0]} == 'Y' ]] && DISTRO_NAME=$sys_rpts_distro_name && return 0
+    echo ''
+    read -p'<ACCEPT System Value?>' -a ANS_ARR;echo ''
+    [[ ${#ANS_ARR[*]} -gt 0 ]] &&\
+        [[ ${ANS_ARR[0]} == 'Y' ]] &&\
+        DISTRO_NAME=$sys_rpts_distro_name &&\
+        return 0
 
     return 3
 }
@@ -149,8 +151,7 @@ Set_sys_rpts_distro_name() {
 
     if [ -n ${sys_rpts_distro_name} ]
     then
-        echo 'System reports distro as '${sys_rpts_distro_name}'.'
-        read -p'<ENTER>'
+        echo 'System reports distro as '${sys_rpts_distro_name}'.' >&2
         return 0
     fi
 
@@ -210,7 +211,8 @@ Confirm_DISTRO_CPU() {
     prettyprint '1,32,40,M,n' ' distribution name.'
     [[ $distro_valid_flag != 'Y' ]] && return 16
 
-    prettyprint '0,1,32,40,M,n' 'Using general distro (category) name of '$distro_generia'.'
+    prettyprint '0,1,32,40,M,n'\
+'Using general distro (category) name of '$distro_generia'.'
     Pauze "INFO,Confirmed $DISTRO_NAME on ${address_len}-bit box."
 
     return 0
@@ -226,90 +228,43 @@ User_no_distro_bye() {
     exit $RCxDC
 }
 
-Contact_server() {
-
-    Pauze "Check that server address is correct and is contactable ( COND: $refresh_svn )"
-
-    Sub_lcl_stat() {
-        echo 'Check on subversion local repo status'
-        if [ -d ${SOURCEBASE}/.svn ]
-        then
-            cd ${SOURCEBASE}/
-            svn update
-        else
-            apt-get install subversion
-            cd
-            Correct_subversion_ssh
-            svn co svn+ssh://frita@192.168.1.9/var/svn/Frita/freeitathenscode/
-        fi
-        Pauze '(DONE) Check on subversion local repo status'
-    }
-
-    [[ $(ssh frita@192.168.1.9 'echo $HOSTNAME') =~ 'nuvo-servo' ]]\
-        && Pauze 'Checked Server is valid: 192.168.1.9' && Sub_lcl_stat && return $?
-
-    return 1
-}
-
-Correct_subversion_ssh() {
-
-    subv_conf=''
-    for subversion_meta_dir in $(find '/home/'$(grep ':'$UID':' /etc/passwd |cut -f1 -d:) -maxdepth 1 -type d -name '.subversion';find /etc/ -maxdepth 1 -type d -name 'subversion')
-    do
-        subv_conf="${subversion_meta_dir}/config"
-        echo 'Checking subversion config path '$subv_conf
-        [[ -f ${subv_conf} ]] && break
-        subv_conf=''
-    done
-    [[ -z $subv_conf ]] && return 4
-
-    grep 'ssh' $subv_conf
-    Answer='N'
-    Pause_n_Answer 'Y|N' "Fix $subv_conf for Frita's ssh connection (Y|N)? "
-    case $Answer in
-        Y)
-            sudo perl -pi'.bak' -e 's/#\s*ssh\b(.+?ssh)\s+-q(.+)$/ssh${1} -v${2}/' ${subv_conf}
-            ;;
-        *)
-            Pauze 'OK, NO changes made...'
-            ;;
-    esac
-
-    return 0
-}
-
 Integrity_check() {
-    Pauze 'Check (absence of) local UUID reference for swap in fstab.'
+
     RCxU=1
     grep -P 'UUID.+swap' /etc/fstab && RCxU=$?
+    Pauze 'Verify (absence of) local UUID reference for swap in fstab.'
     if [ $RCxU -eq 0 ]
     then
-        Pauze 'fstab cAnNoT gO oN iMaGe wItH lOcAl UUID reference. Entering editor...'
-        sudo vi /etc/fstab
+        echo 'fstab cAnNoT gO oN iMaGe wItH lOcAl UUID reference'
+        Pauze '   but might be false positive...'
+        #Entering editor...'
+        #sudo vi /etc/fstab
     fi
 
-    Pauze 'Checking swap'
-    Run_Cap_Out sudo swapoff --all --verbose
-    Run_Cap_Out sudo swapon --all --verbose
+    sudo swapoff --all --verbose
+    Pauze 'Verify swap off'
+    sudo swapon --all --verbose
+    Pauze 'Verify swap on'
 
-    Pauze "Ensuring that QC.sh and revert_prep... are properly linked in ${HOME}/bin" 
     local_scripts_DIR="${HOME}/bin"
     [[ -d $local_scripts_DIR ]] || mkdir $local_scripts_DIR
     sudo chown -c oem $local_scripts_DIR
 
-    [[ -e ${local_scripts_DIR}/QC.sh ]] || ln -s ${SOURCEBASE}/QC_Process/QC.sh ${local_scripts_DIR}/QC.sh
-    [[ -e ${local_scripts_DIR}/revert_prep_for_shipping_to_eu ]]\
-        || ln -s ${codebase}/revert_prep_for_shipping_to_eu ${local_scripts_DIR}/revert_prep_for_shipping_to_eu 
+    [[ -e ${local_scripts_DIR}/QC.sh ]] ||\
+        ln -s ${SOURCEBASE}/QC_Process/QC.sh ${local_scripts_DIR}/QC.sh
+    [[ -e ${local_scripts_DIR}/revert_prep_for_shipping_to_eu ]] ||\
+        ln -s ${codebase}/revert_prep_for_shipping_to_eu\
+     ${local_scripts_DIR}/revert_prep_for_shipping_to_eu 
+
     find ${local_scripts_DIR} -ls
-    echo ''
+    Pauze 'Verify you have a home bin dir. And that QC / other scripts are present'
 
-    Pauze 'Confirming that the correct Run Quality Control icon is in place...'
     (find ${SOURCEBASE}/QC_Process -iname 'Quality*' -exec md5sum {} \; ;\
         find ${SOURCEBASE}/QC_process_dev/Master_${address_len} -iname 'Quality*' -exec md5sum {} \; ;\
         find ${HOME}/Desktop -iname 'Quality*' -exec md5sum {} \;) |grep -v '\.svn' |sort
-    echo ''
+    Pauze 'Verify that the correct Run Quality Control icon is in place...'
 
-    Pauze 'Done with Integrity Check'
+    #Pauze 'Done with Integrity Check'
 
     return 0
 }
@@ -327,50 +282,24 @@ Install_Remove_requested_packages() {
 
     Pauze 'Install necessary packages'
     RCxPK=0
-    Install_packages_from_file_list $package_list_path_I || RCxPK=$?
+    Install_packages_from_file_list $pathname_packages_list || RCxPK=$?
     [[ $RCxPK -ne 0 ]] && Pauze 'Problems Installing Packages:'$RCxPK
 
-    case $distro_generia in
-        ubuntu|mint)
-            echo 'Run BPR Code'
-            [[ -f ${codebase}/BPR_custom_prep.sh ]] &&\
-                ${codebase}/BPR_custom_prep.sh
-            Pauze "Run BPR: Last return code: $?"
-            ;;
-        *)
-            Pauze "Don't need to run BPR additions for "$distro_generia' ('$DISTRO_NAME')'
-            ;;
-    esac
+    if [ $address_len -eq 64 ]
+    then
+        grep -o -P '^OnlyShowIn=.*MATE' /usr/share/applications/screensavers/*.desktop
+        Pauze 'Mate Desktop able to access xscreensavers for ant spotlight?'
+    fi
 
     return 0
 }
+
+#This_script_dir=$(dirname $0)
 #for pkg_file in $(find $This_script_dir -maxdepth 1 -type f -name 'Packages*')
 
 Install_packages_from_file_list() {
     local package_list_file=$1
     RCz=0
-
-    Process_package() {
-        IFS=','
-        declare -ra pkg_info_a=($1)
-        IFS=$HOLDIFS
-
-        declare -r pkg_info_L=${#pkg_info_a[*]}
-        pkg_name=${pkg_info_a[0]}
-        pkg_by_addr=${pkg_info_a[1]}
-        [[ pkg_by_addr -eq 0 ]] && pkg_by_addr=$address_len
-        if [ $pkg_by_addr != $address_len ]
-        then
-            echo 'Skipping package '$pkg_name' on '$address_len' box.'
-            return 4
-        fi
-
-        RCxE=0
-        [[ $pkg_info_L -gt 3 ]] && (Check_extra $pkg_name ${pkg_info_a[3]} || RCxE=$?)
-        [[ $RCxE -gt 10 ]] && return $RCxE
-
-        Pkg_by_distro_session ${pkg_info_a[2]};RCxDS=$?
-    }
     for pkg_info_csv in $(grep -v '^#' $package_list_file)
     do
         Process_package $pkg_info_csv;RCa=$?
@@ -378,11 +307,36 @@ Install_packages_from_file_list() {
         then
             echo 'Problem with package '$pkg_name
             ((RCz+=$RCa))
-        fi 
+        fi
     done
     return $RCz
 }
 
+Process_package() {
+    IFS=','
+    declare -ra pkg_info_a=($1)
+    IFS=$HOLDIFS
+
+    declare -r pkg_info_L=${#pkg_info_a[*]}
+    pkg_name=${pkg_info_a[0]}
+    pkg_by_addr=${pkg_info_a[1]}
+    [[ pkg_by_addr -eq 0 ]] && pkg_by_addr=$address_len
+    if [ $pkg_by_addr != $address_len ]
+    then
+        echo 'Skipping package '$pkg_name' on '$address_len' box.'
+        return 0
+    fi
+
+    RCxE=0
+    [[ $pkg_info_L -gt 3 ]] && (Check_extra $pkg_name ${pkg_info_a[3]} || RCxE=$?)
+    [[ $RCxE -gt 10 ]] && return $RCxE
+
+    RCxDS=$RCxE
+    Pkg_by_distro_session ${pkg_info_a[2]} || RCxDS=$?
+
+    return $RCxDS
+}
+
 Check_extra() {
     local pkg_name=$1
     shift 1
@@ -394,6 +348,7 @@ Check_extra() {
     IFS=$HOLDIFS
     declare extra_L=${#extra_a[*]}
     [[ $extra_L -gt 1 ]] || return 5
+
     case ${extra_a[0]} in
         ppa)
             RCxPPA=0
@@ -404,7 +359,7 @@ Check_extra() {
             then
                 Pauze 'Return code for ppa setup ='$RCxPPA
                 RCxPPA=0
-            fi 
+            fi
             return $RCxPPA
             ;;
         INSTALL)
@@ -506,36 +461,36 @@ Pkg_by_distro_session() {
 
 Check_Setup_wallpaper() {
 
-    [[ $DISTRO_NAME == 'lubuntu' ]] && wallpaper_system_dirname='/usr/share/lubuntu/wallpapers'
-    wallpaper_system_path=${wallpaper_system_dirname}/$wallpaper_filename
-    if [[ -e $wallpaper_system_path ]]
+    [[ $DISTRO_NAME == 'lubuntu' ]] &&\
+        sys_dir_wallpaper='/usr/share/lubuntu/wallpapers'
+    sys_path_wallpaper=${sys_dir_wallpaper}/$filename_wallpaper
+    if [[ -e $sys_path_wallpaper ]]
     then
         wallpaper_was_setup='Y'
         return 0
     fi
 
-    [[ -d $wallpaper_system_dirname ]] || return 5
-    
-    [[ -f $wallpaper_source_pathname ]] || return 6
+    [[ -d $sys_dir_wallpaper ]] || return 5
+    [[ -f $src_path_wallpaper ]] || return 6
+
+    if [ $live_run != 'Y' ]
+    then
+        Pauze 'DRY RUN: Would run cp -iv '${src_path_wallpaper}' '${sys_dir_wallpaper}'/'
+        return 0
+    fi
 
     Answer='Y'
-    Pause_n_Answer 'Y|N' 'INFO,Copy '$wallpaper_filename' to '$wallpaper_system_dirname'?'
+    Pause_n_Answer 'Y|N'\
+        'WARN,Copy '$filename_wallpaper' to '$sys_dir_wallpaper'?'
     if [ "${Answer}." == 'Y.' ]
     then
-        if [ $live_run != 'Y' ]
-        then
-            Pauze 'DRY RUN: Would run cp -iv '$wallpaper_source_pathname ${wallpaper_system_dirname}'/'
-            return 0
-        fi
-
-        sudo cp -iv $wallpaper_source_pathname ${wallpaper_system_dirname}/ || return 7
+        sudo cp -iv $src_path_wallpaper ${sys_dir_wallpaper}/\
+	    || return 7
         return 0
-
     fi
 
     return 1
 }
-# find ${wallpaper_system_dir}/ -name "$wallpaper_file" &
 
 Report_Check_Setup_wallpaper() {
     local RCi=$1
@@ -545,25 +500,24 @@ Report_Check_Setup_wallpaper() {
     case $RCi in
         0)
             [[ $wallpaper_was_setup == 'N' ]] && echo 'Wallpaper successfully setup'
-            Pauze 'Wallpaper is in place:'$wallpaper_system_path
+            Pauze 'Wallpaper is in place:'$sys_path_wallpaper
             ;;
         1)
             Pauze 'WARNING, wallpaper setup will be done later...'
             ;;
         6)
-            Pauze 'Invalid wallpaper source pathname '$wallpaper_source_pathname
+            Pauze 'Invalid wallpaper source pathname '$src_path_wallpaper
             ;;
         5)
-            Pauze 'Invalid wallpaper System Location: '$wallpaper_system_dirname
+            Pauze 'Invalid wallpaper System Location: '$sys_dir_wallpaper
             ;;
         7)
-            Pauze 'Cannot copy wallpaper to '$wallpaper_system_dirname
+            Pauze 'Cannot copy wallpaper to '$sys_dir_wallpaper
             ;;
         *)
             Pauze 'Invalid code:'${RCi}' Wallpaper report'
             ;;
     esac
-    set +u
     return 0
 }
 
@@ -581,6 +535,15 @@ Cleanup_nouser_nogroup() {
     return 0
 }
 
+# -*- Execution continues here. Mainline (below) invokes driving function -*-
+set -u
+declare -r HOLDIFS=$IFS
+This_script=$(basename $0)
+declare -rx Messages_O=$(mktemp -t "${This_script}_log.XXXXX")
+declare -rx Errors_O=$(mktemp -t "${This_script}_err.XXXXX")
+
+# -*- Process any command line Options -*-
+Optvalid='APbDn:RuVGh'
 while getopts $Optvalid OPT
 do
     case $OPT in
@@ -592,11 +555,9 @@ do
             ;;
         D)
             live_run='Y'
-            Pauze 'LIVE RUN Selected. Control-C now to exit.'
             ;;
-        B)
-            Not_Batch_Run='Y'
-            echo 'Interactive Run'
+        b)
+            batch_run='Y'
             ;;
         n)
             Set_Confirm_distro_name $OPTARG;RCx1=$?
@@ -615,11 +576,10 @@ do
             refresh_git='N'
             ;;
         h)
-            echo $This_script\
-            ': Valid options are [ -A -P -B -d{distro} -R -u -V -G -b{SrcBase} -h]'
+            echo $This_script
             echo "A SET ADD_ALL='N'"
             echo "P SET PUR_ALL='N'"
-            echo "B SET Not_Batch_Run='Y'"
+            echo "b SET batch_run='Y'"
             echo "n SET :Distro Name:"
             echo "R SET aptcache_needs_update='N'"
             echo "u SET refresh_updatedb='Y'"
@@ -635,15 +595,37 @@ do
             ;;
     esac
 done
+
+echo -ne "\n\n\e[1;31;40m"\
+'*---------------------------------------------------------------*'
+echo -e "\e[0m"
+
+# -x = let child processes inherit
+# -r = make value permanent (read-only)
 declare -x aptcache_needs_update
 declare -x refresh_svn
 declare -x refresh_git
 declare -r ADD_ALL
 declare -r PUR_ALL
-declare -rx Not_Batch_Run
-
-declare -r HOLDIFS=$IFS
-This_script_dir=$(dirname $0)
+declare -rx batch_run
+[[ $batch_run == 'Y' ]] || Pauze 'Interactive Run Selected'
+
+echo '$SOURCEBASE='$SOURCEBASE
+echo '$codebase='$codebase
+echo '$pathname_packages_list'=$pathname_packages_list
+echo '$filename_wallpaper'=$filename_wallpaper
+echo '$src_path_wallpaper'=$src_path_wallpaper
+echo '$sys_dir_wallpaper'=$sys_dir_wallpaper
+echo '$aptcache_needs_update'=$aptcache_needs_update
+echo '$refresh_updatedb'=$refresh_updatedb
+echo '$refresh_svn'=$refresh_svn
+echo '$refresh_git'=$refresh_git
+echo '$ADD_ALL'=$ADD_ALL
+echo '$PUR_ALL'=$PUR_ALL
+
+declare -rx live_run
+[[ $live_run == 'Y' ]] && echo 'LIVE RUN Selected. System files COULD be changed!'
+Pauze 'Confirm Selections <ENTER> ... or LEAVE <Control-C>'
 
 Mainline
 
@@ -651,7 +633,7 @@ Mainline
 [[ -z $PIDng ]] || echo 'Check on process '$PIDng
 
 # Make the version-controlled tree - SOURCEBASE --
-#  -- let child processes inherit (-x)
-
-#PKGS='lm-sensors hddtemp ethtool gimp firefox dialog xscreensaver-gl libreoffice aptitude vim flashplugin-installer htop inxi vrms mintdrivers gparted terminator hardinfo'
 
+#PKGS='lm-sensors hddtemp ethtool gimp firefox 
+#  dialog xscreensaver-gl libreoffice aptitude vim
+#  flashplugin-installer htop inxi vrms mintdrivers gparted terminator hardinfo'
diff --git a/image_scripts/Prepare_functions b/image_scripts/Prepare_functions
index bd23f4e..c584a57 100644
--- a/image_scripts/Prepare_functions
+++ b/image_scripts/Prepare_functions
@@ -3,6 +3,8 @@ source ${codebase}/Common_functions || return 135
 
 Run_apt_update() {
 
+    sudo $(which ifconfig || /bin/true)
+
     [[ $aptcache_needs_update == 'Y' ]] || return 0
 
     Check_report_dest $Messages_O || return $?
@@ -23,7 +25,7 @@ Apt_purge() {
     local RC=0
     if [ "${live_run}." != 'Y.' ]
     then
-        Pauze 'DRY RUN: apt-get purge --auto-remove '$packages |tee -a ${Messages_O}
+        Pauze 'DRY RUN: apt-get purge --auto-remove ' $packages |tee -a ${Messages_O}
         return 0
     fi
 
@@ -49,6 +51,58 @@ Apt_install() {
     return $RC
 }
 
+Contact_server() {
+
+    Pauze "Check that server address is correct and is contactable ( COND: $refresh_svn )"
+
+    Sub_lcl_stat() {
+        echo 'Check on subversion local repo status'
+        if [ -d ${SOURCEBASE}/.svn ]
+        then
+            cd ${SOURCEBASE}/
+            svn update
+        else
+            apt-get install subversion
+            cd
+            Correct_subversion_ssh
+            svn co svn+ssh://frita@192.168.1.9/var/svn/Frita/freeitathenscode/
+        fi
+        Pauze '(DONE) Check on subversion local repo status'
+    }
+
+    [[ $(ssh frita@192.168.1.9 'echo $HOSTNAME') =~ 'nuvo-servo' ]]\
+        && Pauze 'Checked Server is valid: 192.168.1.9' && Sub_lcl_stat && return $?
+
+    return 1
+}
+
+Correct_subversion_ssh() {
+
+    subv_conf=''
+    for subversion_meta_dir in $(find '/home/'$(grep ':'$UID':' /etc/passwd |cut -f1 -d:) -maxdepth 1 -type d -name '.subversion';find /etc/ -maxdepth 1 -type d -name 'subversion')
+    do
+        subv_conf="${subversion_meta_dir}/config"
+        echo 'Checking subversion config path '$subv_conf
+        [[ -f ${subv_conf} ]] && break
+        subv_conf=''
+    done
+    [[ -z $subv_conf ]] && return 4
+
+    grep 'ssh' $subv_conf
+    Answer='N'
+    Pause_n_Answer 'Y|N' "Fix $subv_conf for Frita's ssh connection (Y|N)? "
+    case $Answer in
+        Y)
+            sudo perl -pi'.bak' -e 's/#\s*ssh\b(.+?ssh)\s+-q(.+)$/ssh${1} -v${2}/' ${subv_conf}
+            ;;
+        *)
+            Pauze 'OK, NO changes made...'
+            ;;
+    esac
+
+    return 0
+}
+
 Check_report_dest() {
     local report_file_out=$1
 
@@ -78,4 +132,3 @@ Check_report_dest() {
 #
 #    return $RC
 #}
-
diff --git a/image_scripts/revert_prep_for_shipping_to_eu b/image_scripts/revert_prep_for_shipping_to_eu
old mode 100644
new mode 100755
diff --git a/pxe/01-00-1f-29-4e-e9-21 b/pxe/01-00-1f-29-4e-e9-21
index 893e5e9..884363b 100644
--- a/pxe/01-00-1f-29-4e-e9-21
+++ b/pxe/01-00-1f-29-4e-e9-21
@@ -16,7 +16,7 @@ menu color unsel        * #d8d8d8ff #00000000 *
 menu color hotsel       1;7;37;40 #ffffffff #76a1d0ff *
 menu color tabmsg       * #ffffffff #00000000 *
 menu color help         37;40 #ffdddd00 #00000000 none
-menu vshift 14
+menu vshift 4
 menu rows 18
 menu helpmsgrow 15
 menu cmdlinerow 16
@@ -24,51 +24,119 @@ menu timeoutrow 16
 menu tabmsgrow 18
 menu tabmsg Press ENTER to boot or TAB to edit a menu entry
 
-#MENU AUTOBOOT Starting Local System in (timeout #) seconds
 LABEL local
     MENU default
     MENU LABEL Boot from Local Disk
     localboot 0x80
     timeout 0
 
-MENU BEGIN IMAGING
+label clonezilla_64
+  MENU label Clone (64-bit)
+  KERNEL Czilla_20140331_saucy_amd64/live/vmlinuz
+  INITRD Czilla_20140331_saucy_amd64/live/initrd.img 
+  APPEND boot=live config noswap locales="en_US.UTF-8" edd=on nomodeset ocs_live_run="/usr/sbin/ocs-sr -q2 -c -j2 -gs -z1p -i 2000 -fsck-src-part -p true saveparts Mint17_Mate_64_oem_20140808.img sda1 sda3 sda5" ocs_live_extra_param="" ocs_live_keymap="" ocs_live_batch="no" ocs_lang="" vga=788 nosplash noprompt fetch=tftp://192.168.1.9/tftpboot/Czilla_20140331_saucy_amd64/live/filesystem.squashfs ocs_server="192.168.1.9"
+
+MENU BEGIN INSTALL GNU+Linux (Image with Clonezilla)
+
+MENU BEGIN Image with Clonezilla: 64-bit
+
+MENU BEGIN 64-bit: Ready for Prime Time
+
+LABEL Prod-mint17-64bit
+    MENU LABEL Install Mint17 MATE 64-bit oem (22-Jul Build, normal 60GB+)
+    KERNEL Czilla_20140331_saucy_amd64/live/vmlinuz
+    INITRD Czilla_20140331_saucy_amd64/live/initrd.img 
+    APPEND boot=live config noswap locales="en_US.UTF-8" keyboard-layouts=NONE edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/Prod_Mint17N_64.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts Prod_Mint17N_64bit sda1 sda3 sda5" ocs_live_batch="yes" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/Czilla_20140331_saucy_amd64/live/filesystem.squashfs 
 
 LABEL Mint64_mate_oem_config
-    MENU LABEL Install Mint13 MATE 64-bit oem-config (06-Jun Build - Final)
+    MENU LABEL Install Mint13 MATE 64-bit oem (06-Jun Build - Final)
     KERNEL clonezilla-amd64/live/vmlinuz
     INITRD clonezilla-amd64/live/initrd.img 
-    APPEND boot=live live-config noswap nolocales edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/part64_home.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts Mint13_Mate_64bit_20140606.img sda1 sda5" ocs_live_batch="yes" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/clonezilla-amd64/live/filesystem.squashfs
-    #PPEND boot=live live-config noswap nolocales edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/home/frita/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/part64_home.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts Prod_Mint64 sda1 sda5" ocs_live_batch="yes" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/c/f64.squashfs
+    APPEND boot=live config noswap locales="en_US.UTF-8" keyboard-layouts=NONE edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/Prod_Mint13_64.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts Prod_Mint13_64bit sda1 sda5" ocs_live_batch="yes" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/clonezilla-amd64/live/filesystem.squashfs 
 
-LABEL lubuntu32-oem-config
-    MENU LABEL Install Lubuntu 14.04 32-bit oem-config (25-Apr Build)
+MENU END
+
+MENU BEGIN 64-bit: NOT Ready for Prime Time (Beta Tests)
+
+LABEL Beta-mint17-64bit
+    MENU LABEL Install Mint17 MATE 64-bit oem (Beta, 31-Jul Build, normal 60GB+)
+    KERNEL Czilla_20140331_saucy_amd64/live/vmlinuz
+    INITRD Czilla_20140331_saucy_amd64/live/initrd.img 
+    APPEND boot=live config noswap locales="en_US.UTF-8" keyboard-layouts=NONE edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/Prod_Mint17N_64.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p true restoreparts Beta_Mint17_64bit sda1 sda3 sda5" ocs_live_batch="yes" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/Czilla_20140331_saucy_amd64/live/filesystem.squashfs 
+
+LABEL Beta-mint17-lvm-64bit
+    MENU LABEL Install Mint17 MATE 64-bit (Beta, 11-Jul Build, lvm 60GB+)
+    KERNEL clonezilla-amd64/live/vmlinuz
+    INITRD clonezilla-amd64/live/initrd.img 
+    APPEND boot=live config noswap locales="en_US.UTF-8" keyboard-layouts=NONE edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/part64_boot_lvm.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p true restoreparts Beta_Mint17_64bit sda1 sda2" ocs_live_batch="yes" ocs_postrun="source /home/partimag/freeitathenscode/pxe/LVM_Post_Run_add3" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/clonezilla-amd64/live/filesystem.squashfs 
+
+MENU END
+
+MENU END
+
+MENU BEGIN Image with Clonezilla: 32-bit
+
+MENU BEGIN 32-bit: Ready for Prime Time
+
+LABEL Prod-mint17-normalfs
+    MENU LABEL Install Mint17 MATE 32-bit (25-Jul Build, Normal FS)
     KERNEL clonezilla-i486/live/vmlinuz
     INITRD clonezilla-i486/live/initrd.img 
-    APPEND boot=live config noswap nolocales edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/part32_home.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts Prod_Lubuntu sda1 sda5" ocs_live_batch="no" vga=788 splash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
-    #ppend boot=live live-config noswap nolocales edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/home/frita/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/part32_home.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts Prod_Lubuntu sda1 sda5" ocs_live_batch="yes" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/c/f32.squashfs
+    APPEND boot=live config noswap locales="en_US.UTF-8" keyboard-layouts=NONE edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 1" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/Prod_Mint17N_32.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p true restoreparts Prod_Mint17N_32bit sda1 sda3 sda5" ocs_live_batch="yes" vga=788 splash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs 
 
-MENU BEGIN Alternate Clonezilla Images...
+LABEL Prod-mint17-32bit_flx
+    MENU LABEL Install Mint17 MATE 32-bit (30-Jun Build, 40GB+ Flexible FS)
+    KERNEL clonezilla-i486/live/vmlinuz
+    INITRD clonezilla-i486/live/initrd.img 
+    APPEND boot=live config noswap nolocales edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/part32_boot_lvm.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p true restoreparts Prod_Mint17_32bit sda1 sda2" ocs_live_batch="no" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
+    # locales="en_US.UTF-8" keyboard-layouts=NONE
+
+LABEL lubuntu32-oem-config
+    MENU LABEL Install Lubuntu 14.04 32-bit oem-config (28-Apr Build)
+    KERNEL clonezilla-i486/live/vmlinuz
+    INITRD clonezilla-i486/live/initrd.img 
+    APPEND boot=live config noswap locales="en_US.UTF-8" keyboard-layouts=NONE edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/part32_home.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts Prod_Lubuntu sda1 sda5" ocs_live_batch="no" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
 
 LABEL mint32-pae-legacy
-  MENU LABEL Install Mint13 XFCE 32 bit PAE (Lacks oem-config ability)
+  MENU LABEL Install Mint13 XFCE 32-bit PAE (Lacks oem-config ability)
   KERNEL clonezilla-i486/live/vmlinuz
   INITRD clonezilla-i486/live/initrd.img 
-  APPEND boot=live config noswap nolocales edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 7" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="sleep 12" ocs_prerun4="/home/partimag/freeitathenscode/pxe/partition.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts latest-mint32pae sda2" ocs_live_batch="yes" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
-  #ppend boot=live live-c noswap nolocales edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 7" ocs_prerun2="mount -t nfs 192.168.1.9:/home/frita/partimag /home/partimag" ocs_prerun3="sleep 12" ocs_prerun4="/home/partimag/freeitathenscode/pxe/partition.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts latest-mint32pae sda2" ocs_live_batch="yes" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/c/f32.squashfs
+  APPEND boot=live config noswap locales="en_US.UTF-8" keyboard-layouts=NONE edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 7" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/partition.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts latest-mint32pae sda2" ocs_live_batch="no" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
 
 LABEL mint32-legacy
-  MENU label Install Mint13 XFCE (32 bit, emergency only)
+  MENU label Install Mint13 XFCE (32-bit, emergency only)
   KERNEL clonezilla-i486/live/vmlinuz
   INITRD clonezilla-i486/live/initrd.img 
-  APPEND boot=live live-config noswap nolocales edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 7" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="sleep 12" ocs_prerun4="/home/partimag/freeitathenscode/pxe/partition.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts latest-ubuntu sda2" ocs_live_batch="yes" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
-# append boot=live live-config noswap nolocales edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 7" ocs_prerun2="mount -t nfs 192.168.1.9:/h..timag /home/partimag" ocs_prerun3="sleep 12" ocs_prerun4="/home/partimag/freeitathenscode/pxe/partition.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts latest-ubuntu sda2" ocs_live_batch="yes" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/c/f32.squashfs
-# initrd=c/i32 
+  APPEND boot=live live-config noswap locales="en_US.UTF-8" keyboard-layouts=NONE edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 7" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/partition.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts latest-ubuntu sda2" ocs_live_batch="no" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
+
+LABEL Install Emmabuntus 32-bit oem-config
+  KERNEL clonezilla-i486/live/vmlinuz
+  INITRD clonezilla-i486/live/initrd.img 
+  APPEND boot=live live-config noswap locales="en_US.UTF-8" keyboard-layouts=NONE edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/part32_home_boot.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts Prod_emmabuntus sda1 sda2 sda5" ocs_live_batch="yes" vga=788 splash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
+
+MENU END
+
+MENU BEGIN 32-bit: NOT Ready for Prime Time (Beta Tests)
+#21889642 Beta_Mint17_32bit
+
+LABEL Beta-mint17-normalfs
+    MENU LABEL Install Mint17 MATE 32-bit (Beta, 31-Jul Build, Normal FS)
+    KERNEL clonezilla-i486/live/vmlinuz
+    INITRD clonezilla-i486/live/initrd.img 
+    APPEND boot=live config noswap locales="en_US.UTF-8" keyboard-layouts=NONE edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 1" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/Prod_Mint17N_32.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p true restoreparts Beta_Mint17_32bit sda1 sda3 sda5" ocs_live_batch="yes" vga=788 splash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs 
+
+LABEL Beta-mint17-lvm-32bit
+    MENU LABEL Install (Beta) Mint17 MATE 32-bit (23-Jul Build, flex 40GB+)
+    KERNEL clonezilla-i486/live/vmlinuz
+    INITRD clonezilla-i486/live/initrd.img 
+    APPEND boot=live config noswap locales="en_US.UTF-8" keyboard-layouts=NONE edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/part32_boot_lvm.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p true restoreparts Beta_Mint17_lvm_32bit sda1 sda2" ocs_live_batch="no" ocs_postrun="source /home/partimag/freeitathenscode/pxe/LVM_Post_Run_add3" vga=788 splash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs 
+MENU END
 
 MENU END
 
 MENU END
 
-MENU BEGIN "Live CD" Selections (Run Linux without installing)
+MENU BEGIN TRY GNU+Linux ("Live CD", installs to RAM only)
 
 MENU BEGIN "Live CD" : 64-bit
 
@@ -77,7 +145,7 @@ label live-mm-64-oem-config-17
   KERNEL mint17-64bit-mate/casper/vmlinuz
   INITRD mint17-64bit-mate/casper/initrd.lz 
   APPEND boot=casper netboot=nfs nfsroot=192.168.1.9:/tftpboot/mint17-64bit-mate file=/cdrom/preseed/cli.seed
-  #ppend boot=casper netboot=nfs initrd=mint17-64bit-mate/casper/initrd.lz nfsroot=192.168.1.9:/tftpboot/mint17-64bit-mate file=/cdrom/preseed/linuxmint.seed
+
 label live-mm-64-oem-config-13
   MENU label TRY Mint 13 (oem-config) with Mate Desktop Environment
   KERNEL mm64_oemconfig/casper/vmlinuz
@@ -88,7 +156,7 @@ MENU END
 
 MENU BEGIN "Live CD" : 32-bit
 
-LABEL live-L1404S
+label live-mm-32-oem-config-17
   MENU label TRY Mint 17 Mate 32-bit
   KERNEL mint17-32bit/casper/vmlinuz
   INITRD mint17-32bit/casper/initrd.lz 
@@ -137,15 +205,16 @@ label live-l1204
   append boot=casper netboot=nfs initrd=l-12.04/casper/initrd.lz nfsroot=192.168.1.9:/tftpboot/l-12.04 file=/cdrom/preseed/ubuntu.seed
 
 MENU END
-MENU END
 
-MENU BEGIN Utilities
+MENU END
 
 label hdt
     menu label Identify Hardware
     kernel memdisk
     append initrd=hdt/hdt.img floppy
 
+MENU BEGIN Utilities
+
 label DBAN
   menu label DBAN 2.2.8
   kernel dban_test/dban.bzi
@@ -156,47 +225,17 @@ LABEL memtest
   kernel memtest/memtestp
   append -
 
-#LABEL System Rescue CD "Live Image"
-#kernel systemrescuecd/isolinux/rescue32
-# some machines need acpi=off no-hlt edd=off
-# can have it autorun a script ar_nowait ar_source=http://server/autorun
-# can load entire filesystem in ram isntead of as needed boottftp=tftp://server/sysrcd/sysrcd.dat
-#append initrd=systemrescuecd/isolinux/initram.igz setkmap=us vga=5 dostartx
-
 label clonezilla_64
-  MENU label Clonezilla live (64 bit)
-  KERNEL clonezilla-amd64/live/vmlinuz
-  INITRD clonezilla-amd64/live/initrd.img 
-  APPEND boot=live config noswap nolocales edd=on nomodeset ocs_live_run="ocs-live-general" ocs_live_extra_param="" ocs_live_batch="no" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/clonezilla-amd64/live/filesystem.squashfs
-  #ppend initrd=clonezilla-amd64/live/initrd.img boot=live config noswap nolocales edd=on nomodeset ocs_live_run="ocs-live-general" ocs_live_extra_param="" ocs_live_batch="no" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/clonezilla-amd64/live/filesystem.squashfs
+  MENU label Clonezilla live (64-bit)
+  KERNEL Czilla_20140331_saucy_amd64/live/vmlinuz
+  INITRD Czilla_20140331_saucy_amd64/live/initrd.img 
+  APPEND boot=live config noswap locales="en_US.UTF-8" keyboard-layouts=NONE edd=on nomodeset ocs_live_run="ocs-live-general" ocs_live_extra_param="" ocs_live_batch="no" vga=788 splash fetch=tftp://192.168.1.9/tftpboot/Czilla_20140331_saucy_amd64/live/filesystem.squashfs
+
 LABEL clonezilla_32
-  MENU LABEL Clonezilla live (32 bit)
+  MENU LABEL Clonezilla live (32-bit)
   KERNEL clonezilla-i486/live/vmlinuz
   INITRD clonezilla-i486/live/initrd.img 
-  #ppend boot=live config noswap nolocales edd=on nomodeset ocs_live_run="ocs-live-general" ocs_live_extra_param="" ocs_live_batch="no" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
-
-MENU END
-
-MENU BEGIN Utilities - Testing  
-
-LABEL Beta-mint17-64bit
-    MENU LABEL Install (Beta Test) Mint17 MATE 64-bit (16-Jun Build)
-    KERNEL clonezilla-amd64/live/vmlinuz
-    INITRD clonezilla-amd64/live/initrd.img 
-    APPEND boot=live config noswap nolocales edd=on nomodeset ocs_prerun="sleep 3" ocs_prerun1="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun2="/home/partimag/freeitathenscode/pxe/part64_boot_lvm.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p true restoreparts Beta_Mint17_64bit sda1 sda5" ocs_live_batch="no" vga=788 splash fetch=tftp://192.168.1.9/tftpboot/clonezilla-amd64/live/filesystem.squashfs
-
-LABEL Beta-mint17-32bit
-    MENU LABEL Install (Beta Test) Mint17 MATE 32-bit (19-Jun Build, resized for 60GB+ drives)
-    KERNEL clonezilla-i486/live/vmlinuz
-    INITRD clonezilla-i486/live/initrd.img 
-    APPEND boot=live config noswap nolocales edd=on nomodeset ocs_prerun="sleep 3" ocs_prerun1="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun2="/home/partimag/bin/part32_boot_lvm.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p true restoreparts Beta_Mint17_32bit sda1 sda5" ocs_live_batch="no" vga=788 splash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
-    #ocs_prerun2="/home/partimag/freeitathenscode/pxe/part32_boot_lvm.sh" 
-
-LABEL Beta-Test-lubuntu32-oem
-    MENU LABEL Install (Beta Test) Lubuntu 14.04 32-bit oem-config (28-Apr Build)
-    KERNEL clonezilla-i486/live/vmlinuz
-    INITRD clonezilla-i486/live/initrd.img
-    APPEND boot=live live-config noswap nolocales edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/part32_home.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -g auto -e1 auto -e2 -c -j2 -srel -k -r -p true restoreparts Beta_Lubuntu sda1 sda5" ocs_live_batch="yes" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
+  APPEND boot=live config noswap locales="en_US.UTF-8" keyboard-layouts=NONE edd=on nomodeset ocs_live_run="ocs-live-general" ocs_live_extra_param="" ocs_live_batch="no" vga=788 splash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
 
 LABEL Kiosk Boot
     LINUX systemrescuecd/isolinux/rescue32
@@ -210,22 +249,23 @@ LABEL Kiosk Boot (text only, no gui)
 
 MENU END
 
-MENU END
+MENU BEGIN Ye Olde Legacie Scriptes
 
-MENU BEGIN Ye Olde Legacie Scriptes (not much use)
+#LABEL 
+#    MENU LABEL Install Mint17 MATE 64-bit (25-Jun Build)
+#    KERNEL clonezilla-amd64/live/vmlinuz
+#    INITRD clonezilla-amd64/live/initrd.img 
+#    APPEND boot=live config noswap nolocales edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/part64_boot_lvm.old" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p true restoreparts Prod_Mint17_64bit sda1 sda5" ocs_live_batch="no" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/clonezilla-amd64/live/filesystem.squashfs
+#    # locales="en_US.UTF-8" keyboard-layouts=NONE
 
-LABEL Install Emmabuntus 32-bit oem-config
-  KERNEL clonezilla-i486/live/vmlinuz
-  INITRD clonezilla-i486/live/initrd.img 
-  APPEND boot=live live-config noswap nolocales edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/part32_home_boot.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts Prod_emmabuntus sda1 sda2 sda5" ocs_live_batch="yes" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
-  # PEND boot=live live-config noswap nolocales edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/home/frita/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/part32_home_boot.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts Prod_emmabuntus sda1 sda2 sda5" ocs_live_batch="yes" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/c/f32.squashfs
-LABEL lubuntu32-oem-config
-  MENU LABEL Install Lubuntu 13.10 32-bit oem-config (07-Mar Build)
-  kernel c/v32
-  append initrd=c/i32 boot=live live-config noswap nolocales edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/home/frita/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/part32_home.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -g auto -e1 auto -e2 -c -j2 -srel -k -r -p reboot restoreparts Old_Lubuntu sda1 sda5" ocs_live_batch="yes" vga=788 nosplash fetch=tftp://192.168.1.9/tftpboot/c/f32.squashfs
+#LABEL Gamma-mint17-32bit
+#    MENU LABEL Install (Gamma) Mint17 MATE 32-bit (19-Jun Build)
+#    KERNEL clonezilla-i486/live/vmlinuz
+#    INITRD clonezilla-i486/live/initrd.img 
+#    APPEND boot=live config noswap locales="en_US.UTF-8" keyboard-layouts=NONE edd=on nomodeset ocs_prerun="/usr/sbin/rpc.gssd" ocs_prerun1="sleep 3" ocs_prerun2="mount -t nfs 192.168.1.9:/partimag /home/partimag" ocs_prerun3="/home/partimag/freeitathenscode/pxe/part32_boot_lvm_temp0619.sh" ocs_live_extra_param="" ocs_live_run="/usr/sbin/ocs-sr -l en_US.UTF-8 -g auto -e1 auto -e2 -c -j2 -srel -k -r -p true restoreparts Gamma_Mint17_32bit sda1 sda5" ocs_live_batch="yes" ocs_postrun="source /home/partimag/freeitathenscode/pxe/LVM_Post_Run_add6" vga=788 splash fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
 
 label live-u10043
-  menu label Run Ubuntu 10.04.3
+  menu label TRY Ubuntu 10.04.3
   kernel u-10.04.3/casper/vmlinuz
   append boot=casper netboot=nfs initrd=u-10.04.3/casper/initrd.lz nfsroot=192.168.1.9:/tftpboot/u-10.04.3 file=/cdrom/preseed/ubuntu.seed
 
@@ -235,47 +275,18 @@ label DBAN_2
   kernel dban2/dban.bzi
   append initrd dban2/dban.bzi root=/dev/ram0 init=rc nuke="dwipe"
 
-MENU END
-
-# *buntu debugging tips
-#
-# append break=mount debug=y
-# when this drops you to busybox run
-# t=/dev/tty2; sh <$t >$t 2>$t &
-# then run exit
-# now the install continues but you have a shell on the second vt
-#
-# for live cd
-# automatic-ubiquity debug-ubiquity
-#
-# for alternate installer
-# DEBCONF_DEBUG=5
-# ocs_lang and ocs_live_keymap are deprecated
-
-# does not work, says invalid ar_source.  possibly problem with sysrcd.  also sysrcd takes a long time to get to this point, is there any faster option?
-#label sysrcd-wipe
-#menu LABEL Wipe Hard Drive (needs re-testing)
-#kernel sysrcd/rescuecd
+#LABEL System Rescue CD "Live Image"
 #kernel systemrescuecd/isolinux/rescue32
-#append initrd=systemrescuecd/isolinux/initram.igz setkmap=us vga=5 nfsboot=192.168.1.9:/tftpboot/systemrescuecd/ ar_nowait ar_source=192.168.1.2:/tftpboot/systemrescuecd/
-
-# -p reboot -l en_US.UTF-8
-#systemrescuecd/isolinux/rescue64
-#
-#label install-1004
-#  menu label Auto install Ubuntu 10.04.1
-#  kernel 10.04.1/casper/vmlinuz
-## change "noscrub.seed" to "scrub.seed" to use a preseed file with scrubbing
-## add "noninteractive" to install on low ram
-#  append  boot=casper netboot=nfs initrd=10.04.1/casper/initrd.lz nfsroot=192.168.1.9:/tftpboot/10.04.1 automatic-ubiquity debug-ubiquity noprompt file=/cdrom/preseed/noscrub.seed
-
-#TODO Following allegedly will build a usb stick with the named image:
-#ocs-live-dev -c -g en_US.UTF-8 -t -k NONE -e \
-#"-g auto -e1 auto -e2 -c -r -j2 -srel -k -p true restoreparts 2013-10-09-20-fritagonal-img sda1 sda3" 2013-10-09-20-fritagonal-img
+# some machines need acpi=off no-hlt edd=off
+# can have it autorun a script ar_nowait ar_source=http://server/autorun
+# can load entire filesystem in ram isntead of as needed boottftp=tftp://server/sysrcd/sysrcd.dat
+#append initrd=systemrescuecd/isolinux/initram.igz setkmap=us vga=5 dostartx
 
+MENU END
 
+#   OLD ocs_prerun="/sbin/dhclient -v" 
 #label dban
-#  menu label (DEPRECATED, OLD DBAN) Wipe hard drive
+# menu label (DEPRECATED, OLD DBAN) Wipe hard drive
 #  kernel memdisk
 #  append initrd=dban_OLD/dban.img floppy
 
@@ -293,18 +304,13 @@ MENU END
 # for alternate installer
 # DEBCONF_DEBUG=5
 # ocs_lang and ocs_live_keymap are deprecated
-#
-#label install-1004
-#  menu label Auto install Ubuntu 10.04.1
-# *--* Symlinks set up to shorten path, fails to work otherwise
-#  kernel 10.04.1/casper/vmlinuz
-## change "noscrub.seed" to "scrub.seed" to use a preseed file with scrubbing
-## add "noninteractive" to install on low ram
-#  append  boot=casper netboot=nfs initrd=10.04.1/casper/initrd.lz nfsroot=192.168.1.9:/tftpboot/10.04.1 automatic-ubiquity debug-ubiquity noprompt file=/cdrom/preseed/noscrub.seed
-#label clonezilla64-live-ubuntu
+
 
 #TODO Following allegedly will build a usb stick with the named image:
 #ocs-live-dev -c -g en_US.UTF-8 -t -k NONE -e \
 #"-g auto -e1 auto -e2 -c -r -j2 -srel -k -p true restoreparts 2013-10-09-20-fritagonal-img sda1 sda3" 2013-10-09-20-fritagonal-img
 
+#21889642 Beta_Mint17_32bit
+#21889043 Beta_Mint17_64bit
+#21889659 Beta_Mint17_lvm_32bit
 
diff --git a/pxe/01-00-21-5a-60-cd-9f b/pxe/01-00-21-5a-60-cd-9f
index 500d91a..3eb2b58 100644
--- a/pxe/01-00-21-5a-60-cd-9f
+++ b/pxe/01-00-21-5a-60-cd-9f
@@ -36,6 +36,15 @@ LABEL DBAN_CUR_NOOPT
     KERNEL dban_test/dban.bzi
     APPEND initrd dban_test/dban.bzi root=/dev/ram0 init=rc nuke="dwipe"
 
+#LABEL DBAN_Short
+#    MENU LABEL DBAN v2.2.6 [DoD 5220.22-M: short] 
+#    TEXT HELP 
+#       Warning: This software irrecoverably destroys data. 
+#       Security Level: Medium (3 passes) 
+#    ENDTEXT 
+#    KERNEL images/disk_tools/dban_v2.2.6_i586/DBAN.BZI 
+#    APPEND nuke="dwipe --autonuke --method dodshort" silent
+
 LABEL DBAN_OLD
     menu label DBAN 2.2.7 (Old Version)
     kernel dban2/dban.bzi
@@ -70,11 +79,6 @@ LABEL System Rescue CD "Live Image" Test 2
     APPEND initrd=systemrescuecd/isolinux/initram.igz setkmap=us vga=5
 MENU END
 
-#label dban
-# menu label (DEPRECATED, OLD DBAN) Wipe hard drive
-#  kernel memdisk
-#  append initrd=dban_OLD/dban.img floppy
-
 # does not work, says invalid ar_source.  possibly problem with sysrcd.  also sysrcd takes a long time to get to this point, is there any faster option?
 #label install-1004
 #  menu label Auto install Ubuntu 10.04.1
diff --git a/pxe/Master32_Pxeboot_Menu b/pxe/Master32_Pxeboot_Menu
index 3615bab..d4cfd93 100755
--- a/pxe/Master32_Pxeboot_Menu
+++ b/pxe/Master32_Pxeboot_Menu
@@ -34,7 +34,7 @@ LABEL clonezilla_32
 MENU LABEL Clone (32-bit)
     KERNEL clonezilla-i486/live/vmlinuz
     INITRD clonezilla-i486/live/initrd.img 
-    APPEND boot=live config noswap locales="en_US.UTF-8" edd=on nomodeset ocs_prerun="mount -t nfs 192.168.1.9:/partimag /home/partimag"  ocs_live_run="/usr/sbin/ocs-sr -q2 -c -j2 -gs -z1p -i 2000 -fsck-src-part -p true saveparts Mint17_Mate_32_oem_20141120.img sda1 sda3 sda5"  ocs_live_keymap="" ocs_live_batch="no" ocs_lang="" vga=788 nosplash noprompt fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
+    APPEND boot=live config noswap locales="en_US.UTF-8" edd=on nomodeset ocs_prerun="mount -t nfs 192.168.1.9:/partimag /home/partimag"  ocs_live_run="/usr/sbin/ocs-sr -q2 -c -j2 -gs -z1p -i 2000 -fsck-src-part -p true saveparts MINT17v1_MATE_32_OEM_20141203.img sda1 sda3 sda5"  ocs_live_keymap="" ocs_live_batch="no" ocs_lang="" vga=788 nosplash noprompt fetch=tftp://192.168.1.9/tftpboot/clonezilla-i486/live/filesystem.squashfs
 
 MENU BEGIN INSTALL GNU+Linux (Image with Clonezilla)
 
diff --git a/pxe/Master64_Pxeboot_Menu b/pxe/Master64_Pxeboot_Menu
index 7219865..cb197f2 100755
--- a/pxe/Master64_Pxeboot_Menu
+++ b/pxe/Master64_Pxeboot_Menu
@@ -34,7 +34,7 @@ label clonezilla_64
   MENU label Clone (64-bit)
   KERNEL Czilla_20140331_saucy_amd64/live/vmlinuz
   INITRD Czilla_20140331_saucy_amd64/live/initrd.img 
-  APPEND boot=live config noswap locales="en_US.UTF-8" edd=on nomodeset ocs_prerun="mount -t nfs 192.168.1.9:/partimag /home/partimag"  ocs_live_run="/usr/sbin/ocs-sr -q2 -c -j2 -gs -z1p -i 2000 -fsck-src-part -p poweroff saveparts Mint17_Mate_64_oem_20141102.img sda1 sda3 sda5" ocs_live_keymap="" ocs_live_batch="no" ocs_lang="" vga=788 nosplash noprompt fetch=tftp://192.168.1.9/tftpboot/Czilla_20140331_saucy_amd64/live/filesystem.squashfs
+  APPEND boot=live config noswap locales="en_US.UTF-8" edd=on nomodeset ocs_prerun="mount -t nfs 192.168.1.9:/partimag /home/partimag"  ocs_live_run="/usr/sbin/ocs-sr -q2 -c -j2 -gs -z1p -i 2000 -fsck-src-part -p poweroff saveparts MINT17r0_MATE_64_OEM_20141204.img sda1 sda3 sda5" ocs_live_keymap="" ocs_live_batch="no" ocs_lang="" vga=788 nosplash noprompt fetch=tftp://192.168.1.9/tftpboot/Czilla_20140331_saucy_amd64/live/filesystem.squashfs
 
 MENU BEGIN INSTALL LINUX (Image with Clonezilla)
 
